plugins {
	id 'java'
	id 'application'
	id "org.sonarqube" version "3.3"
	id 'org.springframework.boot' version '2.5.5'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}

import org.gradle.util.GradleVersion
group = 'com.backend'
version = '0.0.1-SNAPSHOT'
//sourceCompatibility = '11' TODO: Ezt kivettem nem tudom mennyire oof de nelkule nem megy semmi


repositories {
	mavenCentral()

}
application {
	if (GradleVersion.current() >= GradleVersion.version('6.7')) {
		mainClass = 'com.backend.backend.BackendApplication'
	} else {
		mainClassName = 'com.backend.backend.BackendApplication'
	}
}

dependencies {
	implementation("org.springframework.boot:spring-boot-starter-data-jpa")
	implementation("org.springframework.boot:spring-boot-starter-web")
	implementation("com.fasterxml.jackson.module:jackson-module-kotlin")
	implementation("org.springframework.boot:spring-boot-starter-security")
	compileOnly("io.jsonwebtoken:jjwt-api:0.11.0")
	runtimeOnly("io.jsonwebtoken:jjwt-impl:0.11.0")
	runtimeOnly("io.jsonwebtoken:jjwt-jackson:0.11.0")
	implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")

	implementation("org.jetbrains.kotlin:kotlin-reflect")

	developmentOnly("org.springframework.boot:spring-boot-devtools")
	runtimeOnly("com.h2database:h2")

	testImplementation("org.springframework.boot:spring-boot-starter-test")
	implementation("org.springframework.boot:spring-boot-starter-validation")

	runtimeOnly("mysql:mysql-connector-java")
	//implementation files('libs/ojdbc7.jar')
	runtimeOnly("com.oracle:ojdbc7")
	//Native stuf
	implementation project(':jni-library')


}



test {
	useJUnitPlatform()
	systemProperty "java.library.path", file("${buildDir}/libs/com_narcano_jni_CaffParser/shared").absolutePath
}
sonarqube {
	properties {
		property "sonar.projectKey", "zuper1998_SzamBiztHF"
		property "sonar.organization", "zuper1998"
		property "sonar.host.url", "https://sonarcloud.io"
	}
}
